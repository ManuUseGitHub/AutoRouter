const fs=require("fs"),path=require("path"),btoa=require("btoa");module.exports=(()=>{let t=null;return new class{constructor(){t=this}getMapping(e){this.applyOptions(e);try{let e=this.getDirectoriesRecursive(this.rootp).map(t=>path.normalize(t)).filter(e=>t.isRouterModule(e));const r=path.normalize(this.rootp);let o=e.map(t=>({route:("/"+t.replace(r,"").replace(/[\\]+/g,"/")).toLowerCase(),module:"./"+t.replace(/[\\]+/g,"/")}));return o=this.replaceSubRoutes(o),this.translateRoutes(o),o=o.sort((t,e)=>t.route.localeCompare(e.route)),this.hintMapping(o),o.forEach(t=>{this.onmatch(t)}),o}catch(t){this.onerr(t)}}applyOptions(t={}){const{verbose:e=!0,rootp:r="controllers/routes/",onmatch:o=(t=>{}),onerr:s=(({message:t})=>{console.log(t)}),translations:u=[],subr:i=null}=t;Object.assign(this,{verbose:e,rootp:r,onmatch:o,onerr:s,translations:u,subr:i})}capitalize(t){const{route:e}=t,r=this.getSubRouteGroup(e);r[2].length>0&&(t.route=`${r[1]}${r[2].charAt(0).toUpperCase()+r[2].slice(1)}`)}setBase64SubRoute({mapping:t,i:e,route:r}){const o=/^(\/?(?:[^\/]+\/)*)([^\/]*)$/.exec(r),s=o[2]?o[2]:o[1];t[e].route=o[1]+btoa(s)}getSubRouteGroup(t){return/((?:\/.*\/?)?\/)([^\/]*)$/.exec(t)}frameRoute(t){const{route:e}=t,r=this.getSubRouteGroup(e);this.subr&&this.subr.before&&(t.route=`${r[1]}${this.subr.before+r[2]}`),this.subr&&this.subr.after&&(t.route+=this.subr.after)}replaceSubRoutes(t){return t.sort((t,e)=>t.route.localeCompare(e.route)).map((e,r)=>{const o=r<t.length-1?t[r+1].route:"?";return RegExp(`(${e.route.replace(/[\/]+/g,"\\/")}\\/?).*`).test(o)&&null!=this.subr&&("object"!=typeof this.subr?"b64"==this.subr?this.setBase64SubRoute({mapping:t,i:r,route:e.route}):"cptlz"==this.subr&&this.capitalize(e):this.frameRoute(e)),e})}translateRoutes(e){e.map(({route:r},o)=>{t.translations.forEach(t=>{"/"+t.from!=r||(e[o].route="/"+t.to)})})}flatten(t){return t.reduce((t,e)=>t.concat(e),[])}getDirectories(t){return fs.readdirSync(t).map(e=>path.join(t,e)).filter(t=>fs.statSync(t).isDirectory())}isRouterModule(t){if(fs.existsSync(t+"/index.js")){const e=require("./"+t);return"function"==typeof e&&"router"==e.name}return!1}getDirectoriesRecursive(e){return[e,...t.flatten(t.getDirectories(e).map(t.getDirectoriesRecursive))]}hintMapping(t){this.verbose&&(console.log(`\nAUTOROUTER: routers in '${this.rootp}'`),console.log("â†ª",t.map(t=>t.route)),console.log("To turn this message off, use the AutoRouter with the option 'verbose:false'","\n"))}}}).call(this);